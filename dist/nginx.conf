# nginx.conf (优化后版本)

# 'map' 必须定义在 http 块中, server 块之外
# 如果您的 nginx.conf 直接就是 server 块，请将 map 放在最顶上
# 它的作用是创建一个白名单
map $request_uri $is_spa_route {
    default       0; # 默认所有路由都不是SPA路由
    "/"           1; # 根路径是
    "/about"      1; # /about 是
    "/tags"       1; # /tags 是
}

server {
    listen 443 ssl http2;
    server_name mcp.so.kg;

    # --- SSL 和其他基础配置 (保持不变) ---
    ssl_certificate /etc/nginx/certs/live/mcp.so.kg/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/live/mcp.so.kg/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    # ... 其他 SSL 设置 ...
    add_header Strict-Transport-Security "max-age=63072000" always;

    # --- 网站文件根目录 ---
    root /usr/share/nginx/html;
    index index.html;
    charset utf-8;

    # --- 错误页面配置 ---
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    # --- 静态资源处理 (保持不变) ---
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
        try_files $uri =404; # 找不到静态资源就触发404，会正确显示404.html
    }

    # --- 主路由配置 (全新简化版) ---
    location / {
        # 核心逻辑：
        # 1. 尝试找完全匹配的物理文件 (如 /favicon.ico)
        # 2. 如果 $is_spa_route 变量为 1 (在我们的白名单里)，则尝试服务 /index.html
        # 3. 如果以上都不匹配，则返回 404 (这将正确触发 error_page)
        try_files $uri /_spa_redirect_placeholder @spa_fallback;
    }

    # 这是一个内部 location, 专门用来处理白名单路由
    location @spa_fallback {
        if ($is_spa_route = 1) {
            # 如果是白名单路由，服务 index.html
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            expires 0;
            rewrite .* /index.html break;
        }
        
        # 如果不是白名单路由，返回404
        return 404;
    }
}

# --- HTTP 重定向服务器块 (保持不变) ---
server {
    listen 80;
    listen [::]:80;
    server_name mcp.so.kg;
    return 301 https://$server_name$request_uri;
}